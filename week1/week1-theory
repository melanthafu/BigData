	•	What’s the major change in Hadoop 2 vs Hadoop 1?
	⁃	Hadoop 1:
	⁃	1. MapReduce does both preprocessing and cluster-resource management.
	⁃	2. Has limited scaling of nodes, limited to 4,000 nodes per cluster.
	⁃	Hadoop 2:
	⁃	1. YARN (Yet Another Resource Negotiate) does source management and processing is done using different processing models (like spark, mapreduce, Tez).
	⁃	2. Scalable up to 10,000 nodes per cluster.

	•	What is secondary namenode
	⁃	it is used for merging the edits log to fsimage. And also it is the supplement to NameNode. 
	•	Where are Hadoop config files? What’s the file names
	⁃	it configures files under $HADOOP_HOME/etc/hadoop
	⁃	there are mainly two types of configuration files.
	⁃	1. Read-only default configuration:
	⁃	src/core/core-default.xml, src/hdfs/hdfs-default.xml, src/mapred/mapred-default.xml
	⁃	2. Site-Specific configuration:
	⁃	conf/core-site.xml, conf/hdfs-site.xml, conf/mapred-site.xml.
	⁃	core-site.xml:
	⁃	all Hadoop services and clients use this file to locate the NameNode, so this file must be copied to each node that is either running a Hadoop service or is a client node, The Second NameNode uses this file to determine the location for storing the fsimage and edits log names.checkpoint.dir/name locally, and the location of the NameNode namefs.namedefault.name/name. Use the core-site.xml file to isolate communication issues with the NameNode host machine.
	⁃	hdfs-site.xml:
	⁃	HDFS services use this file, which contains a number of important properties.
	⁃	http addresses for the two services
	⁃	replication for data nodes
	⁃	datanode block storage
	⁃	namenode metadata storage
	⁃	Use the hdfs-site.xml file to isolate NameNode start-up issues. Typically, NameNode start-up issues are caused when NameNode fails to load the fsimage and edits log to merge. Ensure that the values for the location properties in hdfs-site.xml are valid locations
	⁃	mapped-site.xml:
	⁃	The framework takes care of scheduling tasks, monitoring them and re-executes the failed tasks.

	•	Which Hadoop component own scheduler
	⁃	YARN
	⁃	In YARN, the ResourceManager is a scheduler. It is strictly limited to arbitrating available resources in the system among the competing applications. It optimizes for cluster utilization against various constraints such as capacity guarantees, fairness and SLAs.  
	•	How to tell MapReduce not to use a combiner
	⁃	Combiner can be used just in case the reduce function is both commutative and associative. It is because values are combined locally before shuffle in arbitrary order.
	⁃	commutative: 1 + 2 + 3 = 1 + 3 + 2
	⁃	associative: 1 + (2 + 3) = (1 + 2) + 3
	⁃	So it is good to use combiner for e.g. sum() operation, but there are operations for which it does not work. So it is always programmer responsibility to decide if the combiner may be used for particular algorithm.
	⁃	don't add the combiner in map reduce.